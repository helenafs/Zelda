package zelda;

import java.awt.Rectangle;
import java.awt.Shape;

import com.golden.gamedev.object.Sprite;
import com.golden.gamedev.object.SpriteGroup;
import com.golden.gamedev.object.collision.AdvanceCollisionGroup;

import zelda.enemies.Enemy;

public class LinkCollisionManager extends AdvanceCollisionGroup {

    private SpriteGroup enemyGroup;

    public LinkCollisionManager(SpriteGroup enemyGroup) {
        this.enemyGroup = enemyGroup;
    }

    public void collided(Sprite s1, Sprite s2) {
        // Vérifier si la collision est entre Link et l'ennemi
        if ((s1 instanceof Link && s2 instanceof Enemy)
                || (s1 instanceof Enemy && s2 instanceof Link)) {

            // Récupérer les bounds de chaque sprite
            Rectangle bounds1 = ((Shape) s1).getBounds();
            Rectangle bounds2 = ((Shape) s2).getBounds();

            // Vérifier si les bounds se chevauchent
            if (bounds1.intersects(bounds2)) {

                // Gérer la collision
                Link link = (s1 instanceof Link) ? (Link) s1 : (Link) s2;
                Enemy enemy = (s1 instanceof Enemy) ? (Enemy) s1 : (Enemy) s2;
                link.takeDamage(enemy.getDamage());
                enemy.takeDamage(link.getDamage());

                // Si l'ennemi est mort, le retirer du groupe de sprites
                if (enemy.getHealth() <= 0) {
                    enemyGroup.remove(enemy);
                }
            }
        }
    }
}

